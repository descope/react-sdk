name: üéõÔ∏è CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  NODE_VERSION: 16.14

jobs:
  build:
    name: üë∑ Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}
      # `npm rebuild` will run all those post-install scripts for us.
      - run: npm rebuild && npm run prepare --if-present
      - name: Building
        run: yarn build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}

  lint:
    name: ü™• Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}
      # `npm rebuild` will run all those post-install scripts for us.
      - run: npm rebuild && npm run prepare --if-present
      - name: Linting
        run: npm run lint
      - name: Format check
        run: npm run format-check

  gitleaks:
    name: üîí Run Git leaks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}
      - name: Gitleaks
        run: npm run leaks
        shell: bash

  testing:
    name: üëî Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}
      # `npm rebuild` will run all those post-install scripts for us.
      - run: npm rebuild && npm run prepare --if-present
      - name: Testing
        run: npm run test
      - name: Coverage check
        uses: devmasx/coverage-check-action@v1.2.0
        with:
          type: lcov
          min_coverage: 94.5
          result_path: coverage/lcov.info
          token: ${{ github.token }}

  license-validation:
    name: ü™™ License Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: https://npm.pkg.github.com/
      # Skip post-install scripts here, as a malicious
      # script could steal NODE_AUTH_TOKEN.
      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{ secrets.CI_NPM_READ_ORG }}
      # `npm rebuild` will run all those post-install scripts for us.
      - run: npm rebuild && npm run prepare --if-present
      - name: License validation
        shell: bash
        run: ./thirdPartyLicenseCollector_linux_amd64 -npm-project .
